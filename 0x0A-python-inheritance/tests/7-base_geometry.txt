>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  ...
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  ...
ValueError: distance must be greater than 0
>>> type(bg) == BaseGeometry
True
>>> bg.area(5)
Traceback (most recent call last):
  ...
TypeError: area() takes 1 positional argument but 2 were given
>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(1, 2, 3)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator("", 3)
>>> bg.integer_validator(None, 3)
>>> bg.integer_validator("john", None)
Traceback (most recent call last):
  ...
TypeError: john must be an integer
>>> bg.integer_validator("john", {5})
Traceback (most recent call last):
  ...
TypeError: john must be an integer
>>> bg.integer_validator("john", (2))
>>> bg.integer_validator("john", (2, 3))
Traceback (most recent call last):
  ...
TypeError: john must be an integer
>>> bg.integer_validator("john", [5])
Traceback (most recent call last):
  ...
TypeError: john must be an integer
